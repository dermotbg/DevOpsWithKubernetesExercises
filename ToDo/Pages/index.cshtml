@page
@model IndexModel

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <h1>
    Welcome to your placeholder to-do list.
  </h1>
  <img src="/image.png" width="200" height="200">
  <br>
  <form method="post">
    <input type="text" name="todo" placeholder="Enter your todo here" maxlength="140" required>
    <button>Create TODO</button>
  </form>
  <p>Here all your to-do's will go</p>
  <ul>
      @foreach (var todo in Model.Todos)
      {
        <li id="@todo.Id-li" style="@(todo.IsDone ? "text-decoration: line-through;" : "")">
            @todo.Text
            
            <button 
              type="button"
              name="done"
              id=@todo.Id
              checked=@todo.IsDone
              onclick="markAsDone(@todo.Id)"
              style="margin-left: 10px;"
            >
              @(
                @todo.IsDone == true
                ? "Undo"
                : "Done"
              )
            </button>
        </li>
      }
  </ul>
</body>
<script>
  const BACKEND_URI = '@Model.BACKEND_URI';
  async function markAsDone(id){
    console.log("fetch function called with ID: " + id);
    const url = `http://${BACKEND_URI}/todos/${id}`;
    try{
      const response = await fetch(url, {
        method: 'PUT'
      });
    if(response.ok){
      const doneButton = document.getElementById(id);
      doneButton.innerHTML == "Done" ? doneButton.innerHTML = "Undo" : doneButton.innerHTML = "Done";
      const listItem = document.getElementById(`${id}-li`);
      listItem.style.textDecoration === "none" ? listItem.style.textDecoration = "line-through" : listItem.style.textDecoration = "none";
    }
    } catch (error){
      console.error(error.message)
    }
  }
</script>
</html>